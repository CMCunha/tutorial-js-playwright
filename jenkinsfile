pipeline {
  //parameters {
  //  string(name: 'testExecs', defaultValue: '')
  //  string(name: 'projectKey', defaultValue: '')
  //  string(name: 'testPlanKey', defaultValue: '')
  //}
  agent {
    docker { 
      image 'mcr.microsoft.com/playwright:v1.27.0-focal'
    } 
  }
  stages {
    stage('install playwright') {
      steps {
        sh '''
          npm i -D @playwright/test
          npx playwright install
        '''
      }
    }
    stage('test') {
      steps {
        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
          sh '''
            PLAYWRIGHT_JUNIT_OUTPUT_NAME=xray-report.xml npx playwright test
          '''
        }
      }
    }
    stage('Import results to Xray') {
      steps {
        script{
              step([$class: 'XrayImportBuilder', endpointName: '/junit', importFilePath: 'xray-report.xml', importToSameExecution: 'true', projectKey: 'EWB', testPlanKey: 'EWB-607', fixVersion: '1.2', revision: '131', serverInstance: '5dc39737-1def-4ff3-a9c4-f52af25f9a8d'])
        }  
      }
    }
    //stage('Extract Variable from log'){
    //  steps {
    //    script {
    //      def logContent = Jenkins.getInstance().getItemByFullName(env.JOB_NAME).getBuildByNumber(Integer.parseInt(env.BUILD_NUMBER)).logFile.text
    //      env.testExecs = (logContent =~ /XRAY_TEST_EXECS:.*/).findAll().first()
    //      echo testExecs
    //     }
    //  }
    //}
    //stage('Using variable from another stage') {
    //  steps {
    //    script {
    //      echo "${env.testExecs}"
    //    }
    //  }
    //}
  }
  post 
  {
    always {
      junit '*.xml'
    }
  }
}
